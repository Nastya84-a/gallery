{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Views/About.js","Components/Loader.js","Components/ProductCard.js","Hooks/HttpRequests.js","Views/Home.js","Views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","icon","faBars","map","item","key","div","style","Header","Footer","About","Loader","ProductCard","product","id","images","imageUrl","name","price","description","useAxiosGet","url","loading","data","error","request","setRequest","useEffect","axios","get","then","response","catch","Home","products","content","href","Product","useParams","src","alt","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.2ffbceb0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavigationMenu(props){\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold py-3\">\r\n                AppName\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\"\r\n                          className=\"text-blue-500 py-3 border-t border-b block\"\r\n                          onClick={props.closeMenu}>\r\n                        Home\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/about\"\r\n                          className=\"text-blue-500 py-3 border-b block\"\r\n                          onClick={props.closeMenu}>\r\n                        About\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationMenu\r\n","import React, {useState} from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {useTransition, animated} from \"react-spring\";\r\nimport NavigationMenu from \"./NavigationMenu\";\r\n\r\n\r\nfunction Navigation() {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const maskTransitions = useTransition (showMenu, null, {\r\n        from: { position: 'absolute', opacity:0 },\r\n        enter: { opacity: 1},\r\n        leave: { opacity: 0},\r\n    })\r\n    const menuTransitions = useTransition(showMenu, null, {\r\n        from: { opacity:0, transform: 'translateX(-100%)'},\r\n        enter: { opacity: 1, transform: 'translateX(0%)'},\r\n        leave: { opacity: 0, transform: 'translateX(-100%)'},\r\n    })\r\n    return (\r\n   <nav>\r\n       <span className=\"text-xl\">\r\n           <FontAwesomeIcon icon={faBars}\r\n           onClick={() => setShowMenu(!showMenu)}/>\r\n\r\n       </span>\r\n       {\r\n           maskTransitions.map(({ item ,key, props})=>\r\n               item &&\r\n               <animated.div\r\n                   key={key}\r\n               style={props}\r\n               className=\"bg-black-t-50 fixer top-0 left-0 w-full h-full z-50\"\r\n                   onClick={()=> setShowMenu(false)}>\r\n\r\n               </animated.div>\r\n           )\r\n       }\r\n       {\r\n           menuTransitions.map(({item, key, props}) =>\r\n               item &&\r\n               <animated.div\r\n                   key={key}\r\n                   style={props}\r\n                   className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\">\r\n                   <NavigationMenu closeMenu={()=> setShowMenu(false)} />\r\n               </animated.div>\r\n           )\r\n       }\r\n   </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navigation","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Header() {\r\nreturn (\r\n    <header className=\"border-b p-3 flex justify-between items-center\">\r\n        <Link to=\"/\" className=\"font-bold\">\r\n            AppName\r\n        </Link>\r\n\r\n        <Navigation />\r\n    </header>\r\n\r\n\r\n)\r\n}\r\n\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n    <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full border-t\">\r\n        Â© Copyright 2020\r\n        </footer>\r\n)\r\n\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"font-bold text-2xl mb-3\">\r\n                About us\r\n            </h1>\r\n            <p>\r\n            This is the about page content.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction ProductCard(props){\r\n    return (\r\n        <div className=\"border mb-4 rounded overflow-hidden\">\r\n            <Link to={`/products/${props.product.id}`}>\r\n                <div\r\n                    style={{\r\n                        'backgroundImage': `url('${props.product.images[0].imageUrl}')`,\r\n                    }}\r\n                    className=\"w-full h-64 bg-blue bg-cover\"\r\n                >\r\n                </div>\r\n            </Link>\r\n            <div className=\"p-3\">\r\n                <h3 className=\"font-bold text-xl mb-3\">\r\n                    <Link to={`/products/${props.product.id}`}>\r\n                        { props.product.name }\r\n                    </Link>\r\n                </h3>\r\n                <div className=\"font-bold mb-3\">\r\n                    $ { props.product.price }\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    { props.product.description }\r\n                </div>\r\n                <Link\r\n                    to={`/products/${props.product.id}`}\r\n                    className=\"bg-blue-500 text-white p-2 flex justify-center w-full\"\r\n                >\r\n                    View\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard\r\n","import {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nexport function useAxiosGet(url){\r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        axios.get(url)\r\n            .then(response => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: response.data,\r\n                    error: false\r\n                })\r\n            })\r\n            .catch(() => {\r\n                setRequest({\r\n                    loading: false,\r\n                    data: null,\r\n                    error: true\r\n                })\r\n            })\r\n    }, [url])\r\n\r\n    return request\r\n}\r\n","import React from 'react'\r\nimport Loader from '../Components/Loader'\r\nimport ProductCard from '../Components/ProductCard'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests'\r\n\r\nfunction Home(){\r\n    // Create your own Mock API: https://mockapi.io/\r\n    const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products?page=1&limit=10`\r\n    let products = useAxiosGet(url)\r\n\r\n    let content = null\r\n\r\n    if(products.error){\r\n        content = <div>\r\n            <div className=\"bg-blue-300 mb-2 p-3\">\r\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n            </div>\r\n            <div className=\"bg-red-300 p-3\">\r\n                There was an error please refresh or try again later.\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(products.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(products.data){\r\n        content =\r\n            products.data.map((product) =>\r\n                <div key={product.id} className=\"flex-no-shrink w-full md:w-1/4 md:px-3\">\r\n                    <ProductCard\r\n                        product={product}\r\n                    />\r\n                </div>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <h1 className=\"font-bold text-2xl mb-3\">\r\n                Best Sellers\r\n            </h1>\r\n            <div className=\"md:flex flex-wrap md:-mx-3\">\r\n                { content }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport Loader from '../Components/Loader'\r\nimport { useAxiosGet } from '../Hooks/HttpRequests'\r\n\r\nfunction Product(){\r\n    const { id } = useParams()\r\n    // Create your own Mock API: https://mockapi.io/\r\n    const url = `https://5e9623dc5b19f10016b5e31f.mockapi.io/api/v1/products/${id}`\r\n\r\n    let product = useAxiosGet(url)\r\n\r\n    let content = null\r\n\r\n    if(product.error){\r\n        content = <div>\r\n            <div className=\"bg-blue-300 mb-2 p-3\">\r\n                If you see this error. Please remember to create your own <a href=\"https://mockapi.io/\">mock API</a>.\r\n            </div>\r\n            <div className=\"bg-red-300 p-3\">\r\n                There was an error please refresh or try again later.\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    if(product.loading){\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(product.data){\r\n        content =\r\n            <div>\r\n                <h1 className=\"text-2xl font-bold mb-3\">\r\n                    {product.data.name}\r\n                </h1>\r\n                <div>\r\n                    <img\r\n                        src={product.data.images[0].imageUrl}\r\n                        alt={product.data.name}\r\n                    />\r\n                </div>\r\n                <div className=\"font-bold text-xl mb-3\">\r\n                    $ {product.data.price}\r\n                </div>\r\n                <div>\r\n                    {product.data.description}\r\n                </div>\r\n            </div>\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Footer from \"./Components/Footer\";\nimport About from \"./Views/About\";\nimport Home from  \"./Views/Home\";\nimport Product from \"./Views/Product\"\n\n\nfunction App() {\n  return (\n      <div className=\"relative pb-10 min-h-screen\">\n          <Router>\n\n              <Header />\n\n              <div className=\"p-3\">\n                  <Switch>\n                      <Route exact path=\"/\">\n                          <Home />\n                      </Route>\n                      <Route path=\"/about\">\n                          <About />\n                      </Route>\n                      <Route path=\"/products/:id\">\n                          <Product />\n                      </Route>\n                  </Switch>\n              </div>\n              <Footer/>\n\n          </Router>\n      </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}